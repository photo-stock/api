name: Build and deploy backend

on:
  push:
    branches: ['main']

jobs:
  deploy:
    name: Deploy Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build and push API Docker images
        id: push_api_image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/photo-stock-api-1:latest -f Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/photo-stock-api-1:latest

          docker build -t ${{ secrets.DOCKER_USERNAME }}/photo-stock-nginx-1:latest -f nginx/Dockerfile ./nginx
          docker push ${{ secrets.DOCKER_USERNAME }}/photo-stock-nginx-1:latest



      - name: Set up SSH for remote Docker Compose
        uses: amirmarmul/docker-context-ssh-action@v1
        with:
          ssh-host: ${{ secrets.SSH_HOST }}
          ssh-username: ${{ secrets.SSH_USERNAME }}
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Backend with Docker Compose
        if: steps.push_api_image.conclusion == 'success'
        run: |
          echo "Deploying stack..."
          docker context use remote

          if docker stack ls | grep -q "photo-stack"; then
            echo "Stack exists. Removing..."
            docker stack remove photo-stack
          else
            echo "No existing stack found. Proceeding to deploy new stack."
          fi

          # Remove unused images and volumes to ensure freshness
          docker image prune -f
          docker volume prune -f

          echo "After remove old..."

          docker stack deploy --prune -c docker-compose.prod.yml photo-stack


